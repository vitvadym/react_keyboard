{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressed","handleKey","event","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,QAAS,IAFb,EAaEC,UAAY,SAACC,GACX,EAAKC,SAAS,CAAEH,QAASE,EAAME,OAdnC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,aAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,aAV/C,oBAiBE,WACE,IAAQD,EAAYO,KAAKR,MAAjBC,QAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,EAAO,mCACwBA,EADxB,KAEJ,kCAzBd,GAAyBU,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.0a4d6054.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressed: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    pressed: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKey);\n  }\n\n  handleKey = (event: KeyboardEvent) => {\n    this.setState({ pressed: event.key });\n  };\n\n  render() {\n    const { pressed } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressed\n            ? `The last pressed key is [${pressed}]`\n            : 'Nothing was pressed yet' }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}